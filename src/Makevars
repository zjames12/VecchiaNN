#PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS)
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS) -L /usr/local/cuda-11.2/targets/x86_64-linux/lib -Wl,-rpath, /usr/local/cuda-11.2/targets/x86_64-linux/lib/libcudart.so
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)
# CUDA_HOME = "/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.0"
CUDA_HOME = /usr/local/cuda-11.2
# R_HOME = ~/.conda/envs/r_env/lib/R/bin
CXX = /usr/bin/g++

# This defines what the shared object libraries will be
# PKG_LIBS= -L/usr/local/cuda-7.0/lib64 -Wl,-rpath,/usr/local/cuda-7.0/lib64 -lcudart -d
# PKG_LIBS= -L "/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.0/bin" -Wl,-rpath,"/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.0/bin" -lcudart


#########################################

R_INC = "/home/zj37/.conda/envs/r_env/lib/R/include"
RCPP_ARMA_INC = "/home/zj37/.conda/envs/r_env/lib/R/library/RcppArmadillo/include"
RCPP_INC = "/home/zj37/.conda/envs/r_env/lib/R/library/Rcpp/include"
BH_INC =  "/home/zj37/.conda/envs/r_env/lib/R/library/BH/include"
NVCC = $(CUDA_HOME)/bin/nvcc
CUDA_INC = $(CUDA_HOME)/targets/x86_64-linux/lib

LIBS = -lcudart
NVCC_FLAGS = -m64 -I$(R_INC)

### Define objects
cu_sources := $(wildcard *.cu)
cu_sharedlibs := $(patsubst %.cu, %.o,$(cu_sources))

cpp_sources := $(wildcard *.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cu_sharedlibs) $(cpp_sharedlibs)

all : VecchiaNN.so

VecchiaNN.so : $(OBJECTS)

%.o : %.cpp $(cpp_sources)
	$(CXX) $< -c -v -fPIC -I$(R_INC) -I$(RCPP_INC) -I$(RCPP_ARMA_INC) -I$(BH_INC)

# onepass.o : onepass.cu
# 	$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c -v -Xcompiler -fpic -I$(RCPP_INC) -I$(RCPP_ARMA_INC) -I$(BH_INC)

nearest_neighbor_functions.o : nearest_neighbor_functions.cu
	$(NVCC) $(NVCC_FLAGS) -I$(CUDA_INC) $< -c -v -Xcompiler -fpic -I$(RCPP_INC) -I$(RCPP_ARMA_INC) -I$(BH_INC)

